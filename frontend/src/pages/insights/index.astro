---
import HeroBanner from "../../components/sections/Insights/HeroBanner.astro";
import Container from "../../components/shared/Container.astro";
import BasePage from "../../layouts/BasePage.astro";
import { INSIGHTS } from "../../config";
import { Image } from "astro:assets";

let tagList = INSIGHTS.reduce((arr, item) => {
  const tagId = item.tag.toLowerCase().trim().replaceAll(" ", "-");
  const tag = item.tag;

  if (arr.find((tag) => tag.tagId === tagId)) return arr;

  arr.push({
    tagId,
    tag,
  });

  return arr;
}, []).sort();

tagList = [
  {
    tagId: "all",
    tag: "All",
  },
  ...tagList,
];

const images = import.meta.glob('/src/assets/images/insights/abstract/*.{png,jpg,jpeg,gif}');

const getRandomImage = (images: string[]): string => {
  const randomIndex = Math.floor(Math.random() * images.length);
  const [image] = images.splice(randomIndex, 1); // Remove the selected image
  return image;
};

const mapInsightsToImages = (insights: any[]): any[] => {
  // Convert the images object to an array of paths
  const imageKeys = Object.keys(images);

  if (imageKeys.length < insights.length) {
    throw new Error("Not enough images to match each post.");
  }

  return insights.map(post => ({
    ...post,
    image: getRandomImage(imageKeys),
  }));
};

const insights = mapInsightsToImages(INSIGHTS);

---

<BasePage>
  <HeroBanner />
  <Container>
    <div class="my-20">
      <div
        class="flex flex-row justify-center items-center gap-9 my-20 flex-wrap"
      >
        {
          tagList.map(({ tagId, tag }) => (
            <div
              data-filter={tagId === "all" ? "all" : `.${tagId}`}
              class={`mix-button capitalize px-1 py-2 border-b-2 border-transparent font-medium cursor-pointer hover:border-b-2 hover:border-primary hover:text-primary transition-all duration-300${
                tagId === "all" ? " !border-primary !text-primary" : ""
              }`}
            >
              {tag}
            </div>
          ))
        }
      </div>
      <div
        class="mixitup-container grid md:grid-cols-2 xl:grid-cols-3 gap-5 md:gap-16 mt-10"
      >
        {
          insights.map(({ tag, service, title, category, image }) => {
            return (
              <a
                href={`${Astro.url.href}/${title
                  .toLowerCase()
                  .replaceAll(" ", "-")}`}
              >
                <div
                  class={`mix relative rounded-xl insight-item cursor-pointer ${tag
                    .toLowerCase()
                    .trim()
                    .replaceAll(" ", "-")} group`}
                >
                  <div class="overflow-hidden rounded-xl">
                    <Image
                      class="rounded-xl group-hover:scale-110 transition-all duration-700 w-[1000px] h-[400px] object-cover"
                      src={image}
                      alt=""
                      width={1000}
                      height={600}
                    />
                  </div>
                  <div class="absolute text-color top-0 left-0 p-5 flex flex-col justify-between items-start h-full overflow-hidden  z-20">
                    <span
                      class={`bg-white px-4 py-1 rounded-full text-[0.8rem] font-semibold`}
                    >
                      {service}
                    </span>
                    <div class="flex flex-col gap-5 justify-start items-start">
                      <h3 class="text-white font-medium text-xl">{title}</h3>
                      <span class="text-white font-medium text-[0.7rem] opacity-90 uppercase">
                        {category}
                      </span>
                      <span class="-mb-14 group-hover:!mb-0 transition-all duration-[800ms] bg-white font-semibold px-4 py-1 rounded-full text-sm">
                        Learn more
                      </span>
                    </div>
                  </div>
                </div>
              </a>
            );
          })
        }
      </div>
    </div>
  </Container>
</BasePage>

<style>
  .insight-item::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.4) 75%,
      rgba(0, 0, 0, 0.8) 100%
    );
    border-bottom-left-radius: 12px;
    border-bottom-right-radius: 12px;
    z-index: 10;
  }
</style>

<script>
  import mixitup from "mixitup";

  var mixer = mixitup(".mixitup-container", {
    animation: {
      duration: 700,
    },
    callbacks: {
      onMixClick: function (state, originalEvent) {
        const mixButtons = document.querySelectorAll(".mix-button");
        mixButtons.forEach((item) => {
          item.classList.remove("!border-primary", "!text-primary");
        });
        this.classList.add("!border-primary", "!text-primary");
      },
    },
  });
</script>
