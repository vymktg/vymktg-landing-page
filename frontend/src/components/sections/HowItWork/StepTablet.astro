---
import Container from "../../shared/Container.astro";
import type { HIWPhase } from "../../../interface/HIWPhase";
import { Image } from "astro:assets";
import type { ImageInterface } from "../../../interface/Image";

export interface Props {
  hiwPhase: HIWPhase[];
  images: ImageInterface[];
}

const { hiwPhase, images } = Astro.props;

let imagePosition = -1;
---

<section id="how-it-work-steps" class="block lg:hidden">
  <Container className="flex flex-col gap-10 z-10 pb-40">
    <div>
      <span
        class="rounded-full border px-4 py-2 text-sm text-primary font-medium"
      >
        Step-by-step
      </span>
      <div class="text-4xl font-semibold mt-5">
        Like building a new house, we prepare carefully for every steps.
      </div>
    </div>
    <div class="flex flex-col gap-16">
      {
        hiwPhase.map((phase, index) => (
          <div class="flex flex-col gap-6 site">
            <h3 class="text-3xl font-semibold">{phase.title}</h3>
            <div id={`phase_splide_${index}`} class="splide splide__phase">
              <div class="splide__track">
                <div class="splide__list !items-stretch">
                  {phase.steps.map((step, indexStep) => {
                    imagePosition += 1;
                    return (
                      <div class="splide__slide flex">
                        <div
                          class={`flex-1 !mb-5 flex flex-col justify-start items-start bg-slate-100 rounded-2xl shadow-md p-7 gap-7 ${
                            index === 0 ? "mt-20 md:mt-20" : "mt-28"
                          }`}
                        >
                          <div class="w-full flex justify-center items-center">
                            <Image
                              class={`w-3/4 sm:w-full md:w-2/3 ${
                                index === 0
                                  ? "-mt-44 md:-mt-36"
                                  : "-mt-44 md:-mt-32"
                              }`}
                              src={images[imagePosition]}
                              alt=""
                            />
                          </div>
                          <div class="flex flex-col gap-5">
                            <h4 class="text-2xl font-medium flex flex-row justify-start items-start">
                              <span class="text-slate-400 flex flex-row">
                                {`0${indexStep + 1}`}
                                <span class="mr-2">.</span>
                              </span>
                              {step.title}
                            </h4>
                            <p class="text-sm font-light hidden">
                              {step.description}
                            </p>
                          </div>
                        </div>
                      </div>
                    );
                  })}
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </Container>
</section>

<style is:global>
  #how-it-work-steps .splide__pagination--custom .splide__pagination__page.is-active { 
    --tw-text-opacity: 1;
    background-color: rgb(148 163 184 / var(--tw-text-opacity));
  }
</style>

<script src="./step-slider.ts"></script>
